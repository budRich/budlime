#!/usr/bin/env bash

___printversion(){
  
cat << 'EOB' >&2
sublget - version: 2019.02.01.0
updated: 2019-02-01 by budRich
EOB
}


# environment variables
: "${SUBLIME_TITS_CRIT:=class}"
: "${SUBLIME_TITS_SRCH:=Sublime_text}"


main(){

  for o in "${!__o[@]}"; do
    case "$o" in
      class|instance) 
        SUBLIME_TITS_CRIT="$o"
        SUBLIME_TITS_SRCH="${__o[$o]}" 
      ;;
    esac
  done

  declare -A _tits

  # example wmctrl -lx output
  # 0x00c00065  0 tiledterm.URxvt  biglab tiledterm
  eval "$(wmctrl -lx | awk \
    -v c="${SUBLIME_TITS_CRIT:0:1}" \
    -v s="${SUBLIME_TITS_SRCH}" \
    -v r="$_ret" '
    match($0,/([0-9a-fx]{10})\s+([0-9-]{1,2})\s+([^.]+)[.](\S+)\s+(\S+)\s+(.+)$/,ma) {
      # 0x00c00065  0 tiledterm.URxvt       biglab tiledterm
      wid=ma[1] # id
      wwd=ma[2] # workspace
      win=ma[3] # instance
      wcl=ma[4] # class
      who=ma[5] # host
      wti=ma[6] # title

      if ((c == "c" && wcl == s) || (c == "i" && win == s)) {
        # example sublime title
        # FILE • (PROJECT) - Sublime Text
        # FILE (PROJECT) - Sublime Text
        # FILE • - Sublime Text
        # FILE - Sublime Text

        match(wti,/^(.+\w)(\s[•])?(\s+[(](.+)[)])? - Sublime Text.*$/,sma)
        sfil=sma[1] # file
        ssts=sma[2] # status
        sprj=sma[4] # project

        if (ssts ~ /./) {ssts=1}
        else {ssts=0}

        print "_tits[f]=\"" gensub("~",ENVIRON["HOME"],"1",sfil) "\""
        print "_tits[s]=\"" ssts "\""
        print "_tits[p]=\"" sprj "\""
        print "_tits[w]=\"" wwd "\""
        print "_tits[n]=\"" strtonum(wid) "\""

        exit
      }

    }'
  )"

  : "${__o[print]:=f}"

  ((__o[follow]==1)) && _tits[f]="$(readlink -f "${_tits[f]}")"
  ((__o[long]==1))   || _tits[f]="${_tits[f]/$HOME/'~'}"

  _tits[d]="${_tits[f]%/*}"

  for ((i=0;i<${#__o[print]};i++)); do
    r="${__o[print]:$i:1}"
    [[ -n ${_tits[$r]} ]] && echo "${_tits[$r]}"
  done

}

___printhelp(){
  
cat << 'EOB' >&2
sublget - Prints the title of the currently open sublime window


SYNOPSIS
--------
sublget [--follow|-o] [--long|-l] [--print|-r OUTPUT]
sublget --class|-c CLASS  [--follow|-o] [--long|-l] [--print|-r OUTPUT]
sublget --instance|-i INSTANCE [--follow|-o] [--long|-l] [--print|-r OUTPUT] 
sublget --help|-h
sublget --version|-v

OPTIONS
-------

--follow|-o  
Will print the source of file/directory if it is
symlinked.


--long|-l  
Will replace ~ with expanded $HOME of file.


--print|-r OUTPUT  
OUTPUT can be one or more of the following 
characters:  

|character | print
|:---------|:-----
|f       | File  
|d       | Directory  
|p       | Project  
|s       | Status  
|n       | Window ID  
|w       | workspace  




--class|-c CLASS  
Sets SUBLIME_TITS_CRIT to c and SUBLIME_TITS_SRCH
to CLASS


--instance|-i INSTANCE  
Sets SUBLIME_TITS_CRIT to i and SUBLIME_TITS_SRCH
to INSTANCE


--help|-h  
Show help and exit.


--version|-v  
Show version and exit
EOB
}


ERM(){ >&2 echo "$*"; }
ERR(){ >&2 echo "[WARNING]" "$*"; }
ERX(){ >&2 echo "[ERROR]" "$*" && exit 1 ; }
declare -A __o
eval set -- "$(getopt --name "sublget" \
  --options "olr:c:i:hv" \
  --longoptions "follow,long,print:,class:,instance:,help,version," \
  -- "$@"
)"

while true; do
  case "$1" in
    --follow     | -o ) __o[follow]=1 ;; 
    --long       | -l ) __o[long]=1 ;; 
    --print      | -r ) __o[print]="${2:-}" ; shift ;;
    --class      | -c ) __o[class]="${2:-}" ; shift ;;
    --instance   | -i ) __o[instance]="${2:-}" ; shift ;;
    --help       | -h ) __o[help]=1 ;; 
    --version    | -v ) __o[version]=1 ;; 
    -- ) shift ; break ;;
    *  ) break ;;
  esac
  shift
done

if [[ ${__o[help]:-} = 1 ]]; then
  ___printhelp
  exit
elif [[ ${__o[version]:-} = 1 ]]; then
  ___printversion
  exit
fi

[[ ${__lastarg:="${!#:-}"} =~ ^--$|${0}$ ]] \
  && __lastarg="" 


main "${@:-}"


