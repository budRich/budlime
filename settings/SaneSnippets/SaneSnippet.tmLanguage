<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE plist PUBLIC "-//Apple//DTD PLIST 1.0//EN" "http://www.apple.com/DTDs/PropertyList-1.0.dtd">
<plist version="1.0">
<dict>
	<key>fileTypes</key>
	<array>
		<string>sane-snippet</string>
	</array>
	<key>name</key>
	<string>SaneSnippet</string>
	<key>patterns</key>
	<array>
		<dict>
			<key>begin</key>
			<string>\G---$</string>
			<key>beginCaptures</key>
			<dict>
				<key>0</key>
				<dict>
					<key>name</key>
					<string>keyword.control.frontmatter.begin.sanesnippet</string>
				</dict>
			</dict>
			<key>end</key>
			<string>(?&gt;=.)\z</string>
			<key>patterns</key>
			<array>
				<dict>
					<key>captures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>support.function.sanesnippet.frontmatter</string>
						</dict>
						<key>2</key>
						<dict>
							<key>name</key>
							<string>punctuation.separator.key-value</string>
						</dict>
						<key>3</key>
						<dict>
							<key>name</key>
							<string>string.unquoted.sanesnippet.frontmatter</string>
						</dict>
					</dict>
					<key>match</key>
					<string>^(description|tabTrigger|scope)(:)\s*(.*?)\s*$</string>
				</dict>
				<dict>
					<key>match</key>
					<string>^#.*</string>
					<key>name</key>
					<string>comment.line.number-sign.frontmatter.sanesnippet</string>
				</dict>
				<dict>
					<key>begin</key>
					<string>^---$</string>
					<key>beginCaptures</key>
					<dict>
						<key>0</key>
						<dict>
							<key>name</key>
							<string>keyword.control.frontmatter.end.sanesnippet</string>
						</dict>
					</dict>
					<key>end</key>
					<string>(?&gt;=.)\z</string>
					<key>name</key>
					<string>meta.content.sanesnippet</string>
					<key>patterns</key>
					<array>
						<dict>
							<key>include</key>
							<string>#snippet</string>
						</dict>
					</array>
				</dict>
				<dict>
					<key>match</key>
					<string>^.*$</string>
					<key>name</key>
					<string>invalid.illegal.embedded.frontmatter.sanesnippet</string>
				</dict>
			</array>
		</dict>
		<dict>
			<key>begin</key>
			<string>\G(?=.)</string>
			<key>end</key>
			<string>(?&lt;=.)\z</string>
			<key>name</key>
			<string>invalid.illegal.sanesnippet</string>
		</dict>
	</array>
	<key>repository</key>
	<dict>
		<key>condition</key>
		<dict>
			<key>begin</key>
			<string>\(\?(?:(\d):?|\{(\w+)\})</string>
			<key>beginCaptures</key>
			<dict>
				<key>0</key>
				<dict>
					<key>name</key>
					<string>keyword.control.regexp.condition.begin</string>
				</dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>constant.numeric.matchref</string>
				</dict>
			</dict>
			<key>end</key>
			<string>\)</string>
			<key>endCaptures</key>
			<dict>
				<key>0</key>
				<dict>
					<key>name</key>
					<string>keyword.control.regexp.condition.end</string>
				</dict>
			</dict>
			<key>name</key>
			<string>meta.structure.condition.regexp</string>
			<key>patterns</key>
			<array>
				<dict>
					<key>include</key>
					<string>#replacements</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#regex_escaped_char</string>
				</dict>
				<dict>
					<key>begin</key>
					<string>:</string>
					<key>beginCaptures</key>
					<dict>
						<key>0</key>
						<dict>
							<key>name</key>
							<string>keyword.control.regexp.condition.mid</string>
						</dict>
					</dict>
					<key>end</key>
					<string>(?=\))</string>
					<key>name</key>
					<string>meta.structure.condition.regexp</string>
					<key>patterns</key>
					<array>
						<dict>
							<key>include</key>
							<string>#replacements</string>
						</dict>
						<dict>
							<key>include</key>
							<string>#regex_escaped_char</string>
						</dict>
					</array>
				</dict>
			</array>
		</dict>
		<key>regex_escaped_char</key>
		<dict>
			<key>match</key>
			<string>\\.</string>
			<key>name</key>
			<string>constant.character.escape.regex</string>
		</dict>
		<key>replacements</key>
		<dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>match</key>
					<string>\$\$</string>
					<key>name</key>
					<string>constant.character.escape.replace.regex</string>
				</dict>
				<dict>
					<key>match</key>
					<string>(?x)
(?:
 \\[uUlLE]
|[$\\]\d
|\$\{\d+\}
|\$\+\{\w+\}
|(?:\$ (?:PRE|POST|LAST_PAREN_|)MATCH
   |\$ \{\^(?:PRE|POST|LAST_PAREN_|)MATCH\}
   |\$[&amp;`'+] (?# These are shorthands for the above))
|\$(?:LAST_SUBMATCH_RESULT|\^N)
)
</string>
					<key>name</key>
					<string>keyword.other.replacement.snippet.sanesnippet</string>
				</dict>
			</array>
		</dict>
		<key>snippet</key>
		<dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>match</key>
					<string>\\[\\${}]</string>
					<key>name</key>
					<string>constant.character.escape.snippet.sanesnippet</string>
				</dict>
				<dict>
					<key>captures</key>
					<dict>
						<key>2</key>
						<dict>
							<key>name</key>
							<string>constant.numeric.tabstop.snippet.sanesnippet</string>
						</dict>
						<key>3</key>
						<dict>
							<key>name</key>
							<string>constant.numeric.tabstop.snippet.sanesnippet</string>
						</dict>
					</dict>
					<key>match</key>
					<string>(\$)(?:(\d+)|\{(\d+)\})</string>
					<key>name</key>
					<string>storage.type.tabstop.snippet.sanesnippet</string>
				</dict>
				<dict>
					<key>captures</key>
					<dict>
						<key>2</key>
						<dict>
							<key>name</key>
							<string>variable.other.shell-variable.snippet.sanesnippet</string>
						</dict>
					</dict>
					<key>match</key>
					<string>(\$)([a-zA-Z_][a-zA-Z0-9_]*)</string>
					<key>name</key>
					<string>storage.type.shell-variable.snippet.sanesnippet</string>
				</dict>
				<dict>
					<key>begin</key>
					<string>(\$\{)(?:(\d+)|([a-zA-Z_][a-zA-Z0-9_]*))(:)</string>
					<key>beginCaptures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>storage.type.tabstop.default.sanesnippet</string>
						</dict>
						<key>2</key>
						<dict>
							<key>name</key>
							<string>constant.numeric.tabstop.snippet.sanesnippet</string>
						</dict>
						<key>3</key>
						<dict>
							<key>name</key>
							<string>variable.other.shell-variable.snippet.sanesnippet</string>
						</dict>
						<key>4</key>
						<dict>
							<key>name</key>
							<string>storage.type.tabstop.default.sanesnippet</string>
						</dict>
					</dict>
					<key>end</key>
					<string>\}</string>
					<key>endCaptures</key>
					<dict>
						<key>0</key>
						<dict>
							<key>name</key>
							<string>storage.type.tabstop.default.sanesnippet</string>
						</dict>
					</dict>
					<key>name</key>
					<string>meta.structure.default.snippet.sanesnippet</string>
					<key>patterns</key>
					<array>
						<dict>
							<key>include</key>
							<string>#snippet</string>
						</dict>
						<dict>
							<key>match</key>
							<string>.</string>
							<key>name</key>
							<string>string.other.value.snippet.sanesnippet</string>
						</dict>
					</array>
				</dict>
				<dict>
					<key>begin</key>
					<string>(\$\{)(?:(\d+)|([a-zA-Z_][a-zA-Z0-9_]*))(/)</string>
					<key>beginCaptures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>storage.type.substitution.sanesnippet</string>
						</dict>
						<key>2</key>
						<dict>
							<key>name</key>
							<string>constant.numeric.tabstop.snippet.sanesnippet</string>
						</dict>
						<key>3</key>
						<dict>
							<key>name</key>
							<string>variable.other.shell-variable.snippet.sanesnippet</string>
						</dict>
						<key>4</key>
						<dict>
							<key>name</key>
							<string>storage.type.substitution.sanesnippet</string>
						</dict>
					</dict>
					<key>end</key>
					<string>\}</string>
					<key>endCaptures</key>
					<dict>
						<key>0</key>
						<dict>
							<key>name</key>
							<string>storage.type.substitution.sanesnippet</string>
						</dict>
					</dict>
					<key>name</key>
					<string>meta.structure.substitution.snippet.sanesnippet</string>
					<key>patterns</key>
					<array>
						<dict>
							<key>include</key>
							<string>source.regexp</string>
						</dict>
						<dict>
							<key>include</key>
							<string>#regex_escaped_char</string>
						</dict>
						<dict>
							<key>include</key>
							<string>#substitution</string>
						</dict>
					</array>
				</dict>
			</array>
		</dict>
		<key>substitution</key>
		<dict>
			<key>begin</key>
			<string>/</string>
			<key>beginCaptures</key>
			<dict>
				<key>0</key>
				<dict>
					<key>name</key>
					<string>storage.type.substitution.mid.sanesnippet</string>
				</dict>
			</dict>
			<key>contentName</key>
			<string>text.substitution</string>
			<key>end</key>
			<string>/[mg]?</string>
			<key>endCaptures</key>
			<dict>
				<key>0</key>
				<dict>
					<key>name</key>
					<string>storage.type.substitution.end.sanesnippet</string>
				</dict>
			</dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>include</key>
					<string>#replacements</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#regex_escaped_char</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#condition</string>
				</dict>
			</array>
		</dict>
	</dict>
	<key>scopeName</key>
	<string>source.sanesnippet</string>
	<key>uuid</key>
	<string>9208D3C1-F9FF-4083-B8BD-57F1E7EA72AB</string>
</dict>
</plist>
